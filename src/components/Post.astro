---
import { formatDate } from "../utils";
import type { IPost } from "../utils/types";

export interface Props extends IPost {}
const { title, pubDate, hero, tags, video } = Astro.props;

// primeiro rascunho da funcionalidade de back-reference
// existe uma forma de escanear os arquivos md capturando as informa√ß√µes para isso
// https://docs.astro.build/en/guides/markdown-content/
// por√©m implementar isso pode ser um pouco complicado
// preciso saber onde cada arquivo foi referenciado e como chegar no post que fez a referencia
// precisa ser algo bilateral, escanear a pagina, procurar links e adicionar eles na listagem no final da p√°gina
// junto com o link para todas as p√°ginas onde a p√°gina atual foi referenciada
// basicamente um mapa gigante, estou pensando em processar essas referencias em um arquivo como um processo separado
// ai lendo do arquivo fica muito menos custoso, dado que...
// no futuro podem ter MUITOS posts e MUITAS referencias e POUCO processamento no tier gratuito ü§£
// 
// OK, ignora isso, agora estamos usando astro collections, tem que ver uma solu√ß√£o usando isso
const references: { link: string; name: string }[] = [];
const hasReferences: boolean = references?.length > 0;
---

<article class="px-3">
  <header class="flex flex-col flex-start content items-center justify-start mb-10">
    <h1 class="basis-1/2">{title}</h1>
    {pubDate && <p class="font-semibold">{formatDate(pubDate)}</p>}
    {
      tags && (
        <div class="flex flex-wrap justify-center">
          {tags.map((tag) => (
            <a class="text-sm text-text-tertiary mr-2 mt-4" href={`/search?query=%23${tag}`}>
              <button class="font-bold underline bg-bg-tertiary hover:bg-bg-tertiary-hover rounded-full px-3 py-1">#{tag}</button>
            </a>
          ))}
        </div>
      )
    }
  </header>

  <!-- Image -->
  {hero && <img class="rounded-xl mx-auto" style="min-width: 80%; max-height: 30em" loading="lazy" src={hero} alt={title} />}

  <!-- Video -->
  {
    video && (
      <div class="embed-responsive aspect-ratio-16/9 mt-6 lg:mt-12">
        <iframe width="700" height="500" class="embed-responsive-item" src={`https://www.youtube.com/embed/${video}`} allow="accelerometer; autoplay; encrypted-media; gyroscope;" allowfullscreen />
      </div>
    )
  }
  <section class="py-6 lg:py-12 content">
    <slot />
    {
      hasReferences && (
        <div class="also-see">
          <p>Veja tamb√©m:</p>
          <ul>
            {references?.map((ref) => {
              return (
                <li>
                  <a href={ref.link}>{ref.name}</a>
                </li>
              );
            })}
          </ul>
        </div>
      )
    }
  </section>
</article>
